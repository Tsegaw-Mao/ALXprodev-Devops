#!/bin/bash

# List of Pokémon
POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Output directory
OUTPUT_DIR="pokemon_data"
mkdir -p "$OUTPUT_DIR"

TIMEOUT=10  # seconds

# Function to fetch Pokémon data with timeout and kill
fetch_pokemon() {
    local pokemon="$1"
    echo "Fetching data for $pokemon..."

    # Run curl in background
    curl -s -f "https://pokeapi.co/api/v2/pokemon/$pokemon" -o "$OUTPUT_DIR/${pokemon}.json" &
    pid=$!

    # Wait with timeout
    ( sleep $TIMEOUT && kill -0 $pid 2>/dev/null && kill $pid && echo "Timed out: $pokemon" >> errors.txt ) &
    killer_pid=$!

    wait $pid 2>/dev/null
    exit_status=$?

    # Stop killer if curl finished in time
    kill $killer_pid 2>/dev/null

    if [ $exit_status -eq 0 ]; then
        echo "Saved data to $OUTPUT_DIR/${pokemon}.json ✅"
    else
        echo "Failed to fetch data for $pokemon ❌" >> errors.txt
    fi
}

# Run all fetches in parallel
for pokemon in "${POKEMONS[@]}"; do
    fetch_pokemon "$pokemon" &
done

# Wait for all jobs to finish
wait

echo "All Pokémon data fetched."
